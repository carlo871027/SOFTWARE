
El manejo correcto de errores y excepciones es importante para el correcto funcionamiento del nodo de integración. Debe considerar cómo y cuándo su extensión definida por el usuario debe manejar errores y excepciones.

El manejo de errores y excepciones aquí describe los factores que debe considerar al desarrollar extensiones definidas por el usuario para IBM® App Connect Enterprise en el lenguaje de programación C. Si está desarrollando extensiones definidas por el usuario utilizando el lenguaje de programación Java ™, puede utilizar métodos estándar de manejo de errores y excepciones de Java. Si, por ejemplo, IBM App Connect Enterprise lanza una excepción internamente, una excepción de Java de la clase MbException se pone a disposición .

El nodo de integración genera excepciones de C ++ para manejar condiciones de error. Estas excepciones se capturan en las capas de software relevantes en el nodo de integración y se manejan en consecuencia. Sin embargo, los programas escritos en C no pueden detectar las excepciones de C ++ y todas las excepciones generadas, de forma predeterminada, omiten todo el código de extensión definido por el usuario de C y quedan atrapadas en una capa superior del nodo de integración.

Las funciones de utilidad, por convención, suelen utilizar el valor de retorno para devolver los datos solicitados; por ejemplo, la dirección o el identificador de un objeto de nodo de integración. El valor devuelto a veces indica que se ha producido un error. Por ejemplo, si no se pudo recuperar la dirección o el manejador de un objeto de nodo de integración, se devuelve cero (CCI_NULL_ADDR). Además, el motivo de una condición de error se almacena en el parámetro de salida del código de retorno, que es, por convención, parte del prototipo de función de todas las funciones de utilidad. Si la función de utilidad se completó correctamente y returnCodeno fue nula, returnCodecontiene CCI_SUCCESS. De lo contrario, contiene uno de los códigos de retorno que se describen aquí. Puede probar el valor de returnCodepara determinar si una función de utilidad fue exitosa.

Si la llamada a una función de utilidad hace que el nodo de integración genere una excepción, el error es visible para la extensión definida por el usuario solo si especifica un valor para el returnCodeparámetro de esa función de utilidad. Si se especificó un valor nulo para returnCodey se produce una excepción:
La extensión definida por el usuario no conoce esa excepción
La función de utilidad no vuelve a la extensión definida por el usuario
El control de ejecución pasa a capas superiores en la pila del nodo de integración para procesar la excepción
Por lo tanto, una extensión definida por el usuario no puede realizar su propia recuperación de errores. Sin embargo, si returnCodese especifica el parámetro y se produce una excepción, se devuelve un código de retorno de CCI_EXCEPTION. En este caso, cciGetLastExceptionData o cciGetLastExceptionDataW (la diferencia es que cciGetLastExceptionDataW devuelve un CCI_EXCEPTION_WIDE_ST que puede contener texto de seguimiento Unicode) se puede utilizar para obtener información de diagnóstico sobre el tipo de excepción que ocurrió. Los datos se devuelven en la estructura CCI_EXCEPTION_ST o CCI_EXCEPTION_WIDE_ST.

Si no hay recursos para liberar, no establezca el argumento returnCode en su extensión definida por el usuario. No configurar este argumento permite que las excepciones eludan sus extensiones definidas por el usuario. El nodo de integración puede manejar estas excepciones en una parte superior de la pila de IBM App Connect Enterprise .

Las inserciones de mensajes se pueden devolver en los miembros CCI_STRING_ST de la estructura CCI_EXCEPTION_ST. CCI_STRING_ST permite que la extensión definida por el usuario proporcione un búfer para recibir todas las inserciones necesarias. El nodo de integración copia los datos en este almacenamiento intermedio y devuelve el número de bytes de salida y la longitud real de los datos. Si el búfer no es lo suficientemente grande, no se copian datos y el miembro "dataLength" se puede utilizar para aumentar el tamaño del búfer, si es necesario.